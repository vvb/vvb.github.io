<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Servers | Containers | Management</title><description>Servers | Containers | Management</description><link>http://localhost:2368/</link><generator>Ghost 0.11</generator><lastBuildDate>Thu, 08 Feb 2018 03:32:02 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>A Day With R</title><description>&lt;h3 id="datatypes"&gt;Datatypes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;vector&lt;/code&gt; is always homogenous&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;list&lt;/code&gt; can be heterogenous&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;matrix&lt;/code&gt; is a list of vectors&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;dataframe&lt;/code&gt; is a list of lists.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;stockprice &amp;lt;- 1900L  
class(stockprice)

stocks &amp;lt;- c("HEG", "Graphite", "Bajaj", "L&amp;amp;T")  
prices &amp;lt;- c(1900L, 650L, 500L, 1380L)  
names(&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/a-day-with-r/</link><guid isPermaLink="false">e04e9fd9-f70e-47b4-bff8-32d7be2ea0a3</guid><category>R</category><dc:creator>vvb</dc:creator><pubDate>Tue, 06 Feb 2018 06:43:33 GMT</pubDate><content:encoded>&lt;h3 id="datatypes"&gt;Datatypes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;vector&lt;/code&gt; is always homogenous&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;list&lt;/code&gt; can be heterogenous&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;matrix&lt;/code&gt; is a list of vectors&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;dataframe&lt;/code&gt; is a list of lists.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;stockprice &amp;lt;- 1900L  
class(stockprice)

stocks &amp;lt;- c("HEG", "Graphite", "Bajaj", "L&amp;amp;T")  
prices &amp;lt;- c(1900L, 650L, 500L, 1380L)  
names(stocks) &amp;lt;- c("Carbon", "Carbon", "Auto", "Infra")

isAuto &amp;lt;- TRUE  
isAuto &amp;lt;- FALSE

data = factor(names(stocks))

mat1 &amp;lt;- matrix(c(1:10), nrow=2)  
mat1 &amp;lt;- matrix(c(1:40), nrow=4)

p &amp;lt;- c(6,8,10)  
p1 &amp;lt;- list(6,8,10)  
p2 &amp;lt;- list(c(6,8,10))  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="vectorofnumericvalues"&gt;Vector of numeric values&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- c(6,8,10)

&amp;gt; p
[1]  6  8 10
&amp;gt;
&amp;gt; for (i in 1:length(p)) {
+   print(p[[i]]*2)
+ }
[1] 12
[1] 16
[1] 20
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="listofvectorof3elems"&gt;List of vector of 3 elems&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;p1 &amp;lt;- list(6,8,10)  
&amp;gt; p1
[[1]]
[1] 6

[[2]]
[1] 8

[[3]]
[1] 10

&amp;gt; for (each in p1) {
+   print(each*2)
+ }
[1] 12
[1] 16
[1] 20
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="listofvectorofoneelemwhichisalsoalist"&gt;List of vector of one elem which is also a list&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;p2 &amp;lt;- list(c(6,8,10))  
&amp;gt; p2
[[1]]
[1]  6  8 10

&amp;gt; for (i in 1:length(p2[[1]])) {
+   print(p2[[1]][i]*2)
+ }
[1] 12
[1] 16
[1] 20
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="lapply"&gt;lapply&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;output is always a list&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; mul &amp;lt;- function(x){x*2}
&amp;gt; p
[1]  6  8 10
&amp;gt; lapply(p, mul)
[[1]]
[1] 12

[[2]]
[1] 16

[[3]]
[1] 20

&amp;gt; p1
[[1]]
[1] 6

[[2]]
[1] 8

[[3]]
[1] 10

&amp;gt; lapply(p1, mul)
[[1]]
[1] 12

[[2]]
[1] 16

[[3]]
[1] 20

&amp;gt; unlist(lapply(p1, mul))
[1] 12 16 20
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="sapply"&gt;sapply&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Good for reporting. &lt;/li&gt;
&lt;li&gt;Needs high level of confidence in data structures used. &lt;/li&gt;
&lt;li&gt;Output can be vector or matrix or list&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; mul &amp;lt;- function(x){x*2}
&amp;gt; p
[1]  6  8 10
&amp;gt; sapply(p, mul)
[1] 12 16 20
&amp;gt; p1
[[1]]
[1] 6

[[2]]
[1] 8

[[3]]
[1] 10

&amp;gt; sapply(p1, mul)
[1] 12 16 20
&amp;gt; p2
[[1]]
[1]  6  8 10

&amp;gt; sapply(p2, mul)
     [,1]
[1,]   12
[2,]   16
[3,]   20
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="vapply"&gt;vapply&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Verify apply&lt;/li&gt;
&lt;li&gt;Verifies if the return type of the function matches with the last arg&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; mul &amp;lt;- function(x){x*2}
&amp;gt; p
[1]  6  8 10
&amp;gt; vapply(p, mul, numeric(1))
[1] 12 16 20
&amp;gt; p
[1]  6  8 10
&amp;gt; vapply(p, mul, numeric(2))
Error in vapply(p, mul, numeric(2)) : values must be length 2,  
 but FUN(X[[1]]) result is length 1
&amp;gt; p
[1]  6  8 10
&amp;gt; vapply(p, mul, character(1))
Error in vapply(p, mul, character(1)) : values must be type 'character',  
 but FUN(X[[1]]) result is type 'double'
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="tapply"&gt;tapply&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;split, apply, combine&lt;/li&gt;
&lt;li&gt;group_by and for each group do a task&lt;/li&gt;
&lt;li&gt;outputs an array&lt;/li&gt;
&lt;li&gt;tapply can have only one y variable, multiple x variables. i.e. mean sepal length for multiple species.&lt;/li&gt;
&lt;li&gt;aggregate can also be used for the same purpose&lt;/li&gt;
&lt;li&gt;aggregate gives data frame as output&lt;/li&gt;
&lt;li&gt;aggregate can have multiple x and multiple y variables. i.e. sales and profit number for multiple companies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="exercise1"&gt;Exercise #1&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Q - From a given list of names print the min and max char in every name in a report format.&lt;/li&gt;
&lt;li&gt;The below also demonstrates the difference between lapply and sapply.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; names &amp;lt;- c("Ankur", "Ganesan", "Bhargavi", "pankaj", "Vivek", "Srikrishnan")
&amp;gt; firstlast &amp;lt;- function(x) {
+   s &amp;lt;- strsplit(x, "")[[1]]
+   return(c(first=min(s), last=max(s)))
+   
+ }
&amp;gt; lapply(names, firstlast)
[[1]]
first  last  
  "A"   "u" 

[[2]]
first  last  
  "G"   "s" 

[[3]]
first  last  
  "B"   "v" 

[[4]]
first  last  
  "a"   "p" 

[[5]]
first  last  
  "V"   "v" 

[[6]]
first  last  
  "S"   "s" 
&amp;gt; class(lapply(names, firstlast))
[1] "list"
&amp;gt;
&amp;gt; sapply(names, firstlast)
      Ankur Ganesan Bhargavi pankaj Vivek Srikrishnan
first "A"   "G"     "B"      "a"    "V"   "S"  
last  "u"   "s"     "v"      "p"    "v"   "s"  
&amp;gt;
&amp;gt; class(sapply(names, firstlast))
[1] "matrix"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="exercise2"&gt;Exercise #2&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Q - from a given list of names print only the unique characters per name&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; names &amp;lt;- c("ankur", "ganesan", "bhargavi", "pankaj", "vivek", "srikrishnan")
&amp;gt; uniquenames &amp;lt;- function(x) {
+   s &amp;lt;- strsplit(x, "")[[1]]
+   return(unique(s))
+ }

&amp;gt; sapply(names, uniquenames)
$ankur
[1] "a" "n" "k" "u" "r"

$ganesan
[1] "g" "a" "n" "e" "s"

$bhargavi
[1] "b" "h" "a" "r" "g" "v" "i"

$pankaj
[1] "p" "a" "n" "k" "j"

$vivek
[1] "v" "i" "e" "k"

$srikrishnan
[1] "s" "r" "i" "k" "h" "n" "a"

&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="tidythedata"&gt;Tidy the data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We use &lt;code&gt;reshape2&lt;/code&gt; and &lt;code&gt;tidyr&lt;/code&gt; libraries here.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reshape2&lt;/code&gt; provides us the &lt;code&gt;melt&lt;/code&gt; method that will help us convert data from report format to a more program friendly format.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tidyr&lt;/code&gt; provides us with the &lt;code&gt;gather&lt;/code&gt; API, this does exactly the same thing as &lt;code&gt;melt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In the below example we hav religions as rows and salary ranges as columns.&lt;/li&gt;
&lt;li&gt;To convert it to tidy data we need to stack religion:salary_range as rows.&lt;/li&gt;
&lt;li&gt;Tidy data allows for easy operation on the dataset - like groupby, filter etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; setwd("/Users/vvb/work/projects/datascience")
&amp;gt; getwd()
[1] "/Users/vvb/work/projects/datascience"

&amp;gt; rawdata &amp;lt;- read.csv("pew.csv", check.names = F, encoding = "UTF-8")
&amp;gt; head(rawdata)
                   religion &amp;lt;$10k $10-20k $20-30k $30-40k $40-50k $50-75k $75-100k $100-150k &amp;gt;150k Don't know/refused
1                  Agnostic    27      34      60      81      76     137      122       109    84                 96  
2                   Atheist    12      27      37      52      35      70       73        59    74                 76  
3                  Buddhist    27      21      30      34      33      58       62        39    53                 54  
4                  Catholic   418     617     732     670     638    1116      949       792   633               1489  
5 Don&amp;lt;U+2019&amp;gt;t know/refused    15      14      15      11      10      35       21        17    18                116  
6          Evangelical Prot   575     869    1064     982     881    1486      949       723   414               1529

&amp;gt; library(reshape2)
&amp;gt; library(tidyr)
&amp;gt; tidydata &amp;lt;- rawdata %&amp;gt;%
+               melt(id= "religion",
+                    variable.name = "salary",
+                    value.name = "count")

&amp;gt; head(tidydata)
                   religion salary count
1                  Agnostic  &amp;lt;$10k    27  
2                   Atheist  &amp;lt;$10k    12  
3                  Buddhist  &amp;lt;$10k    27  
4                  Catholic  &amp;lt;$10k   418  
5 Don&amp;lt;U+2019&amp;gt;t know/refused  &amp;lt;$10k    15  
6          Evangelical Prot  &amp;lt;$10k   575

&amp;gt; tidydata2 &amp;lt;- rawdata %&amp;gt;%
+                 gather(2:11,
+                        key = "salary",
+                        value = "count")

&amp;gt; head(tidydata2)
                   religion salary count
1                  Agnostic  &amp;lt;$10k    27  
2                   Atheist  &amp;lt;$10k    12  
3                  Buddhist  &amp;lt;$10k    27  
4                  Catholic  &amp;lt;$10k   418  
5 Don&amp;lt;U+2019&amp;gt;t know/refused  &amp;lt;$10k    15  
6          Evangelical Prot  &amp;lt;$10k   575  
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Below is the min and max temperature data for various (year, month, day) pairs.&lt;/li&gt;
&lt;li&gt;We need to transform this to a &lt;code&gt;year:month:day&lt;/code&gt; as row format.&lt;/li&gt;
&lt;li&gt;Note that id can be a list of columns - &lt;code&gt;c("year", "month", "element")&lt;/code&gt; where element is &lt;code&gt;temp_max/temp_min&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; rawdata1 &amp;lt;- read.delim("weather.txt", check.names = F, na.strings = '.')
&amp;gt; head(rawdata1)
  year month element  1   2   3  4   5  6  7  8  9  10  11 12 13 14 15  16 17 18 19 20 21 22  23 24 25 26 27 28 29  30 31
1 2010     1    tmax NA  NA  NA NA  NA NA NA NA NA  NA  NA NA NA NA NA  NA NA NA NA NA NA NA  NA NA NA NA NA NA NA 278 NA  
2 2010     1    tmin NA  NA  NA NA  NA NA NA NA NA  NA  NA NA NA NA NA  NA NA NA NA NA NA NA  NA NA NA NA NA NA NA 145 NA  
3 2010     2    tmax NA 273 241 NA  NA NA NA NA NA  NA 297 NA NA NA NA  NA NA NA NA NA NA NA 299 NA NA NA NA NA NA  NA NA  
4 2010     2    tmin NA 144 144 NA  NA NA NA NA NA  NA 134 NA NA NA NA  NA NA NA NA NA NA NA 107 NA NA NA NA NA NA  NA NA  
5 2010     3    tmax NA  NA  NA NA 321 NA NA NA NA 345  NA NA NA NA NA 311 NA NA NA NA NA NA  NA NA NA NA NA NA NA  NA NA  
6 2010     3    tmin NA  NA  NA NA 142 NA NA NA NA 168  NA NA NA NA NA 176 NA NA NA NA NA NA  NA NA NA NA NA NA NA  NA NA  
&amp;gt; str(rawdata1)
'data.frame':    22 obs. of  34 variables:  
 $ year   : int  2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...
 $ month  : int  1 1 2 2 3 3 4 4 5 5 ...
 $ element: Factor w/ 2 levels "tmax","tmin": 1 2 1 2 1 2 1 2 1 2 ...
 $ 1      : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 2      : int  NA NA 273 144 NA NA NA NA NA NA ...
 $ 3      : int  NA NA 241 144 NA NA NA NA NA NA ...
 $ 4      : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 5      : int  NA NA NA NA 321 142 NA NA NA NA ...
 $ 6      : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 7      : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 8      : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 9      : logi  NA NA NA NA NA NA ...
 $ 10     : int  NA NA NA NA 345 168 NA NA NA NA ...
 $ 11     : int  NA NA 297 134 NA NA NA NA NA NA ...
 $ 12     : logi  NA NA NA NA NA NA ...
 $ 13     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 14     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 15     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 16     : int  NA NA NA NA 311 176 NA NA NA NA ...
 $ 17     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 18     : logi  NA NA NA NA NA NA ...
 $ 19     : logi  NA NA NA NA NA NA ...
 $ 20     : logi  NA NA NA NA NA NA ...
 $ 21     : logi  NA NA NA NA NA NA ...
 $ 22     : logi  NA NA NA NA NA NA ...
 $ 23     : int  NA NA 299 107 NA NA NA NA NA NA ...
 $ 24     : logi  NA NA NA NA NA NA ...
 $ 25     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 26     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 27     : int  NA NA NA NA NA NA 363 167 332 182 ...
 $ 28     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 29     : int  NA NA NA NA NA NA NA NA NA NA ...
 $ 30     : int  278 145 NA NA NA NA NA NA NA NA ...
 $ 31     : int  NA NA NA NA NA NA NA NA NA NA ...
&amp;gt; tidydata3 &amp;lt;- rawdata1 %&amp;gt;% melt(id = c("year", "month", "element"),
+                                variable.name = "day",
+                                value.name = "temp")
&amp;gt; head(tidydata3)
  year month element day temp
1 2010     1    tmax   1   NA  
2 2010     1    tmin   1   NA  
3 2010     2    tmax   1   NA  
4 2010     2    tmin   1   NA  
5 2010     3    tmax   1   NA  
6 2010     3    tmin   1   NA  
&amp;gt; tidydata4 &amp;lt;- rawdata1 %&amp;gt;% melt(id = c("year", "month", "element"),
+                                variable.name = "day",
+                                value.name = "temp",
+                                na.rm = TRUE)
&amp;gt; head(tidydata4)
   year month element day temp
21 2010    12    tmax   1  299  
22 2010    12    tmin   1  138  
25 2010     2    tmax   2  273  
26 2010     2    tmin   2  144  
41 2010    11    tmax   2  313  
42 2010    11    tmin   2  163  
&amp;gt; tidydata5 &amp;lt;- rawdata1 %&amp;gt;% gather(4:34, 
+                                  key = "day",
+                                  value = "temp")
&amp;gt; head(tidydata5)
  year month element day temp
1 2010     1    tmax   1   NA  
2 2010     1    tmin   1   NA  
3 2010     2    tmax   1   NA  
4 2010     2    tmin   1   NA  
5 2010     3    tmax   1   NA  
6 2010     3    tmin   1   NA  
&amp;gt; tidydata6 &amp;lt;- rawdata1 %&amp;gt;% gather(4:34, 
+                                  key = "day",
+                                  value = "temp",
+                                  na.rm = TRUE)
&amp;gt; head(tidydata6)
   year month element day temp
21 2010    12    tmax   1  299  
22 2010    12    tmin   1  138  
25 2010     2    tmax   2  273  
26 2010     2    tmin   2  144  
41 2010    11    tmax   2  313  
42 2010    11    tmin   2  163  
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="dcastandspread"&gt;dcast and spread&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; # transform the data to a format that dcast can use
&amp;gt; tidydata7 &amp;lt;- tidydata6[,c("year", "month", "day", "element", "temp")]
&amp;gt; head(tidydata7)
   year month day element temp
21 2010    12   1    tmax  299  
22 2010    12   1    tmin  138  
25 2010     2   2    tmax  273  
26 2010     2   2    tmin  144  
41 2010    11   2    tmax  313  
42 2010    11   2    tmin  163  
&amp;gt; # use element values as column names, pick the values from "temp"
&amp;gt; tidydata8 &amp;lt;- dcast(year + month + day ~ element, data = tidydata7, value.var = "temp")
&amp;gt; head(tidydata8)
  year month day tmax tmin
1 2010     1  30  278  145  
2 2010     2  11  297  134  
3 2010     2   2  273  144  
4 2010     2  23  299  107  
5 2010     2   3  241  144  
6 2010     3  10  345  168  
&amp;gt; # do the same using spread - spread element as columns and use values from temp
&amp;gt; tidydata9 &amp;lt;- spread(tidydata6, element, temp)
&amp;gt; head(tidydata9)
  year month day tmax tmin
1 2010     1  30  278  145  
2 2010     2  11  297  134  
3 2010     2   2  273  144  
4 2010     2  23  299  107  
5 2010     2   3  241  144  
6 2010     3  10  345  168  
&amp;gt; # adding a new column which shows difference in temperature
&amp;gt; tidydata8$tdiff &amp;lt;- tidydata8$tmax - tidydata8$tmin
&amp;gt; head(tidydata8)
  year month day tmax tmin tdiff
1 2010     1  30  278  145   133  
2 2010     2  11  297  134   163  
3 2010     2   2  273  144   129  
4 2010     2  23  299  107   192  
5 2010     2   3  241  144    97  
6 2010     3  10  345  168   177  
&amp;gt;
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="analyzethetitanicshipwreckdatatoanswerthefollowing"&gt;Analyze the titanic shipwreck data to answer the following,&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For each group of Class+Age+Gender what is the survival rate?&lt;/li&gt;
&lt;li&gt;To answer this question, we need to transform the given data&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; rawdata2 &amp;lt;- read.csv("shipwreck.csv", check.names = F, encoding = "UTF-8")
&amp;gt; rawdata2
   class   age     fate male female
1    1st adult perished  118      4  
2    1st adult survived   57    140  
3    1st child perished    0      0  
4    1st child survived    5      1  
5    2nd adult perished  154     13  
6    2nd adult survived   14     80  
7    2nd child perished    0      0  
8    2nd child survived   11     13  
9    3rd adult perished  387     89  
10   3rd adult survived   75     76  
11   3rd child perished   35     17  
12   3rd child survived   13     14  
13  Crew adult perished  670      3  
14  Crew adult survived  192     20  
15  Crew child perished    0      0  
16  Crew child survived    0      0

&amp;gt; # Q - For each group of Class+Age+Gender what is the survival rate?
&amp;gt; tidydata10 &amp;lt;- rawdata2 %&amp;gt;% gather(4:5,
+                                   key = "gender",
+                                   value = "count")
&amp;gt; tidydata10
   class   age     fate gender count
1    1st adult perished   male   118  
2    1st adult survived   male    57  
3    1st child perished   male     0  
4    1st child survived   male     5  
5    2nd adult perished   male   154  
6    2nd adult survived   male    14  
7    2nd child perished   male     0  
8    2nd child survived   male    11  
9    3rd adult perished   male   387  
10   3rd adult survived   male    75  
11   3rd child perished   male    35  
12   3rd child survived   male    13  
13  Crew adult perished   male   670  
14  Crew adult survived   male   192  
15  Crew child perished   male     0  
16  Crew child survived   male     0  
17   1st adult perished female     4  
18   1st adult survived female   140  
19   1st child perished female     0  
20   1st child survived female     1  
21   2nd adult perished female    13  
22   2nd adult survived female    80  
23   2nd child perished female     0  
24   2nd child survived female    13  
25   3rd adult perished female    89  
26   3rd adult survived female    76  
27   3rd child perished female    17  
28   3rd child survived female    14  
29  Crew adult perished female     3  
30  Crew adult survived female    20  
31  Crew child perished female     0  
32  Crew child survived female     0

&amp;gt; tidydata10 &amp;lt;- tidydata10 %&amp;gt;% spread(fate, count)
&amp;gt; tidydata10
   class   age gender perished survived
1    1st adult female        4      140  
2    1st adult   male      118       57  
3    1st child female        0        1  
4    1st child   male        0        5  
5    2nd adult female       13       80  
6    2nd adult   male      154       14  
7    2nd child female        0       13  
8    2nd child   male        0       11  
9    3rd adult female       89       76  
10   3rd adult   male      387       75  
11   3rd child female       17       14  
12   3rd child   male       35       13  
13  Crew adult female        3       20  
14  Crew adult   male      670      192  
15  Crew child female        0        0  
16  Crew child   male        0        0  
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="deplyr"&gt;deplyr&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;filter&lt;/li&gt;
&lt;li&gt;arrange&lt;/li&gt;
&lt;li&gt;mutate&lt;/li&gt;
&lt;li&gt;summarize&lt;/li&gt;
&lt;li&gt;select&lt;/li&gt;
&lt;li&gt;group_by&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; # filter data for Jan
&amp;gt; head(flights)
# A tibble: 6 x 19
   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier flight tailnum origin dest  air_time distance  hour minute
  &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
1  2013     1     1      517            515      2.00      830            819      11.0 UA        1545 N14228  EWR    IAH        227     1400  5.00   15.0  
2  2013     1     1      533            529      4.00      850            830      20.0 UA        1714 N24211  LGA    IAH        227     1416  5.00   29.0  
3  2013     1     1      542            540      2.00      923            850      33.0 AA        1141 N619AA  JFK    MIA        160     1089  5.00   40.0  
4  2013     1     1      544            545     -1.00     1004           1022     -18.0 B6         725 N804JB  JFK    BQN        183     1576  5.00   45.0  
5  2013     1     1      554            600     -6.00      812            837     -25.0 DL         461 N668DN  LGA    ATL        116      762  6.00    0  
6  2013     1     1      554            558     -4.00      740            728      12.0 UA        1696 N39463  EWR    ORD        150      719  5.00   58.0  
# ... with 1 more variable: time_hour &amp;lt;dttm&amp;gt;
&amp;gt; flights %&amp;gt;% filter(month==1)
# A tibble: 27,004 x 19
    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier flight tailnum origin dest  air_time distance  hour minute
   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
 1  2013     1     1      517            515      2.00      830            819     11.0  UA        1545 N14228  EWR    IAH      227       1400  5.00   15.0
 2  2013     1     1      533            529      4.00      850            830     20.0  UA        1714 N24211  LGA    IAH      227       1416  5.00   29.0
 3  2013     1     1      542            540      2.00      923            850     33.0  AA        1141 N619AA  JFK    MIA      160       1089  5.00   40.0
 4  2013     1     1      544            545     -1.00     1004           1022    -18.0  B6         725 N804JB  JFK    BQN      183       1576  5.00   45.0
 5  2013     1     1      554            600     -6.00      812            837    -25.0  DL         461 N668DN  LGA    ATL      116        762  6.00    0  
 6  2013     1     1      554            558     -4.00      740            728     12.0  UA        1696 N39463  EWR    ORD      150        719  5.00   58.0
 7  2013     1     1      555            600     -5.00      913            854     19.0  B6         507 N516JB  EWR    FLL      158       1065  6.00    0  
 8  2013     1     1      557            600     -3.00      709            723    -14.0  EV        5708 N829AS  LGA    IAD       53.0      229  6.00    0  
 9  2013     1     1      557            600     -3.00      838            846    - 8.00 B6          79 N593JB  JFK    MCO      140        944  6.00    0  
10  2013     1     1      558            600     -2.00      753            745      8.00 AA         301 N3ALAA  LGA    ORD      138        733  6.00    0  
# ... with 26,994 more rows, and 1 more variable: time_hour &amp;lt;dttm&amp;gt;
&amp;gt; # filter data for Nov and Dec
&amp;gt; flights %&amp;gt;% filter(month==11 | month == 12)
# A tibble: 55,403 x 19
    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier flight tailnum origin dest  air_time distance  hour minute
   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
 1  2013    11     1        5           2359      6.00      352            345      7.00 B6         745 N568JB  JFK    PSE      205       1617 23.0    59.0
 2  2013    11     1       35           2250    105         123           2356     87.0  B6        1816 N353JB  JFK    SYR       36.0      209 22.0    50.0
 3  2013    11     1      455            500   -  5.00      641            651    -10.0  US        1895 N192UW  EWR    CLT       88.0      529  5.00    0  
 4  2013    11     1      539            545   -  6.00      856            827     29.0  UA        1714 N38727  LGA    IAH      229       1416  5.00   45.0
 5  2013    11     1      542            545   -  3.00      831            855    -24.0  AA        2243 N5CLAA  JFK    MIA      147       1089  5.00   45.0
 6  2013    11     1      549            600   - 11.0       912            923    -11.0  UA         303 N595UA  JFK    SFO      359       2586  6.00    0  
 7  2013    11     1      550            600   - 10.0       705            659      6.00 US        2167 N748UW  LGA    DCA       57.0      214  6.00    0  
 8  2013    11     1      554            600   -  6.00      659            701    - 2.00 US        2134 N742PS  LGA    BOS       40.0      184  6.00    0  
 9  2013    11     1      554            600   -  6.00      826            827    - 1.00 DL         563 N912DE  LGA    ATL      126        762  6.00    0  
10  2013    11     1      554            600   -  6.00      749            751    - 2.00 DL         731 N315NB  LGA    DTW       93.0      502  6.00    0  
# ... with 55,393 more rows, and 1 more variable: time_hour &amp;lt;dttm&amp;gt;
&amp;gt; flights %&amp;gt;% filter(month %in% c(11,12))
# A tibble: 55,403 x 19
    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier flight tailnum origin dest  air_time distance  hour minute
   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
 1  2013    11     1        5           2359      6.00      352            345      7.00 B6         745 N568JB  JFK    PSE      205       1617 23.0    59.0
 2  2013    11     1       35           2250    105         123           2356     87.0  B6        1816 N353JB  JFK    SYR       36.0      209 22.0    50.0
 3  2013    11     1      455            500   -  5.00      641            651    -10.0  US        1895 N192UW  EWR    CLT       88.0      529  5.00    0  
 4  2013    11     1      539            545   -  6.00      856            827     29.0  UA        1714 N38727  LGA    IAH      229       1416  5.00   45.0
 5  2013    11     1      542            545   -  3.00      831            855    -24.0  AA        2243 N5CLAA  JFK    MIA      147       1089  5.00   45.0
 6  2013    11     1      549            600   - 11.0       912            923    -11.0  UA         303 N595UA  JFK    SFO      359       2586  6.00    0  
 7  2013    11     1      550            600   - 10.0       705            659      6.00 US        2167 N748UW  LGA    DCA       57.0      214  6.00    0  
 8  2013    11     1      554            600   -  6.00      659            701    - 2.00 US        2134 N742PS  LGA    BOS       40.0      184  6.00    0  
 9  2013    11     1      554            600   -  6.00      826            827    - 1.00 DL         563 N912DE  LGA    ATL      126        762  6.00    0  
10  2013    11     1      554            600   -  6.00      749            751    - 2.00 DL         731 N315NB  LGA    DTW       93.0      502  6.00    0  
# ... with 55,393 more rows, and 1 more variable: time_hour &amp;lt;dttm&amp;gt;
&amp;gt; # filter data with departure and arrival delay &amp;lt; 2 hours
&amp;gt; str(flights)
Classes 'tbl_df', 'tbl' and 'data.frame':    336776 obs. of  19 variables:  
 $ year          : int  2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ...
 $ month         : int  1 1 1 1 1 1 1 1 1 1 ...
 $ day           : int  1 1 1 1 1 1 1 1 1 1 ...
 $ dep_time      : int  517 533 542 544 554 554 555 557 557 558 ...
 $ sched_dep_time: int  515 529 540 545 600 558 600 600 600 600 ...
 $ dep_delay     : num  2 4 2 -1 -6 -4 -5 -3 -3 -2 ...
 $ arr_time      : int  830 850 923 1004 812 740 913 709 838 753 ...
 $ sched_arr_time: int  819 830 850 1022 837 728 854 723 846 745 ...
 $ arr_delay     : num  11 20 33 -18 -25 12 19 -14 -8 8 ...
 $ carrier       : chr  "UA" "UA" "AA" "B6" ...
 $ flight        : int  1545 1714 1141 725 461 1696 507 5708 79 301 ...
 $ tailnum       : chr  "N14228" "N24211" "N619AA" "N804JB" ...
 $ origin        : chr  "EWR" "LGA" "JFK" "JFK" ...
 $ dest          : chr  "IAH" "IAH" "MIA" "BQN" ...
 $ air_time      : num  227 227 160 183 116 150 158 53 140 138 ...
 $ distance      : num  1400 1416 1089 1576 762 ...
 $ hour          : num  5 5 5 5 6 5 6 6 6 6 ...
 $ minute        : num  15 29 40 45 0 58 0 0 0 0 ...
 $ time_hour     : POSIXct, format: "2013-01-01 05:00:00" "2013-01-01 05:00:00" "2013-01-01 05:00:00" "2013-01-01 05:00:00" ...
&amp;gt; flights %&amp;gt;% filter(dep_delay &amp;lt; 120 &amp;amp; arr_delay &amp;lt; 120) %&amp;gt;% select(arr_delay, dep_delay, everything())
# A tibble: 315,868 x 19
   arr_delay dep_delay  year month   day dep_time sched_dep_time arr_time sched_arr_time carrier flight tailnum origin dest  air_time distance  hour minute
       &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
 1     11.0       2.00  2013     1     1      517            515      830            819 UA        1545 N14228  EWR    IAH      227       1400  5.00   15.0
 2     20.0       4.00  2013     1     1      533            529      850            830 UA        1714 N24211  LGA    IAH      227       1416  5.00   29.0
 3     33.0       2.00  2013     1     1      542            540      923            850 AA        1141 N619AA  JFK    MIA      160       1089  5.00   40.0
 4    -18.0      -1.00  2013     1     1      544            545     1004           1022 B6         725 N804JB  JFK    BQN      183       1576  5.00   45.0
 5    -25.0      -6.00  2013     1     1      554            600      812            837 DL         461 N668DN  LGA    ATL      116        762  6.00    0  
 6     12.0      -4.00  2013     1     1      554            558      740            728 UA        1696 N39463  EWR    ORD      150        719  5.00   58.0
 7     19.0      -5.00  2013     1     1      555            600      913            854 B6         507 N516JB  EWR    FLL      158       1065  6.00    0  
 8    -14.0      -3.00  2013     1     1      557            600      709            723 EV        5708 N829AS  LGA    IAD       53.0      229  6.00    0  
 9    - 8.00     -3.00  2013     1     1      557            600      838            846 B6          79 N593JB  JFK    MCO      140        944  6.00    0  
10      8.00     -2.00  2013     1     1      558            600      753            745 AA         301 N3ALAA  LGA    ORD      138        733  6.00    0  
# ... with 315,858 more rows, and 1 more variable: time_hour &amp;lt;dttm&amp;gt;
&amp;gt; # show the makeup time
&amp;gt; flights %&amp;gt;% mutate(makeuptime = dep_delay - arr_delay) %&amp;gt;% select(makeuptime, everything())
# A tibble: 336,776 x 20
   makeuptime  year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier flight tailnum origin dest  air_time distance  hour
        &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
 1     - 9.00  2013     1     1      517            515      2.00      830            819     11.0  UA        1545 N14228  EWR    IAH      227       1400  5.00
 2     -16.0   2013     1     1      533            529      4.00      850            830     20.0  UA        1714 N24211  LGA    IAH      227       1416  5.00
 3     -31.0   2013     1     1      542            540      2.00      923            850     33.0  AA        1141 N619AA  JFK    MIA      160       1089  5.00
 4      17.0   2013     1     1      544            545     -1.00     1004           1022    -18.0  B6         725 N804JB  JFK    BQN      183       1576  5.00
 5      19.0   2013     1     1      554            600     -6.00      812            837    -25.0  DL         461 N668DN  LGA    ATL      116        762  6.00
 6     -16.0   2013     1     1      554            558     -4.00      740            728     12.0  UA        1696 N39463  EWR    ORD      150        719  5.00
 7     -24.0   2013     1     1      555            600     -5.00      913            854     19.0  B6         507 N516JB  EWR    FLL      158       1065  6.00
 8      11.0   2013     1     1      557            600     -3.00      709            723    -14.0  EV        5708 N829AS  LGA    IAD       53.0      229  6.00
 9       5.00  2013     1     1      557            600     -3.00      838            846    - 8.00 B6          79 N593JB  JFK    MCO      140        944  6.00
10     -10.0   2013     1     1      558            600     -2.00      753            745      8.00 AA         301 N3ALAA  LGA    ORD      138        733  6.00  
# ... with 336,766 more rows, and 2 more variables: minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&amp;gt; 
&amp;gt; head(iris)
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa  
2          4.9         3.0          1.4         0.2  setosa  
3          4.7         3.2          1.3         0.2  setosa  
4          4.6         3.1          1.5         0.2  setosa  
5          5.0         3.6          1.4         0.2  setosa  
6          5.4         3.9          1.7         0.4  setosa  
&amp;gt; # for every species list the average sepal length
&amp;gt; iris %&amp;gt;% group_by(Species) %&amp;gt;% summarise(meanSepl = mean(Sepal.Length))
# A tibble: 3 x 2
  Species    meanSepl
  &amp;lt;fct&amp;gt;         &amp;lt;dbl&amp;gt;
1 setosa         5.01  
2 versicolor     5.94  
3 virginica      6.59  
&amp;gt; head(mtcars)
                   mpg cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4  
Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4  
Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1  
Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1  
Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2  
Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1  
&amp;gt; # list mean of mpg for every combination of gear and cylinder
&amp;gt; mtcars %&amp;gt;% group_by(gear, cyl) %&amp;gt;% summarise(mean1 = mean(mpg))
# A tibble: 8 x 3
# Groups:   gear [?]
   gear   cyl mean1
  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
1  3.00  4.00  21.5  
2  3.00  6.00  19.8  
3  3.00  8.00  15.0  
4  4.00  4.00  26.9  
5  4.00  6.00  19.8  
6  5.00  4.00  28.2  
7  5.00  6.00  19.7  
8  5.00  8.00  15.4  
&amp;gt; # add a new column that lists mpg + displacement
&amp;gt; mtcars %&amp;gt;% group_by(gear, cyl) %&amp;gt;% mutate(newcol = mpg + disp)
# A tibble: 32 x 12
# Groups:   gear, cyl [8]
     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb newcol
   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
 1  21.0  6.00   160 110    3.90  2.62  16.5  0     1.00  4.00  4.00    181
 2  21.0  6.00   160 110    3.90  2.88  17.0  0     1.00  4.00  4.00    181
 3  22.8  4.00   108  93.0  3.85  2.32  18.6  1.00  1.00  4.00  1.00    131
 4  21.4  6.00   258 110    3.08  3.22  19.4  1.00  0     3.00  1.00    279
 5  18.7  8.00   360 175    3.15  3.44  17.0  0     0     3.00  2.00    379
 6  18.1  6.00   225 105    2.76  3.46  20.2  1.00  0     3.00  1.00    243
 7  14.3  8.00   360 245    3.21  3.57  15.8  0     0     3.00  4.00    374
 8  24.4  4.00   147  62.0  3.69  3.19  20.0  1.00  0     4.00  2.00    171
 9  22.8  4.00   141  95.0  3.92  3.15  22.9  1.00  0     4.00  2.00    164
10  19.2  6.00   168 123    3.92  3.44  18.3  1.00  0     4.00  4.00    187  
# ... with 22 more rows
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>Two Egg Problem</title><description>&lt;h3 id="problem"&gt;Problem&lt;/h3&gt;

&lt;p&gt;A building has 100 floors. One of the floors is the highest floor an egg can be dropped from without breaking.&lt;/p&gt;

&lt;p&gt;If an egg is dropped from above that floor, it will break. If it is dropped from that floor or below, it will be completely undamaged and you&lt;/p&gt;</description><link>http://localhost:2368/two_egg_problem/</link><guid isPermaLink="false">fa790a70-e893-4cd2-8dab-7ffab4c626b3</guid><category>#coding</category><dc:creator>vvb</dc:creator><pubDate>Mon, 05 Feb 2018 18:02:15 GMT</pubDate><content:encoded>&lt;h3 id="problem"&gt;Problem&lt;/h3&gt;

&lt;p&gt;A building has 100 floors. One of the floors is the highest floor an egg can be dropped from without breaking.&lt;/p&gt;

&lt;p&gt;If an egg is dropped from above that floor, it will break. If it is dropped from that floor or below, it will be completely undamaged and you can drop the egg again.&lt;/p&gt;

&lt;p&gt;Given two eggs, find the highest floor an egg can be dropped from without breaking, with as few drops as possible.&lt;/p&gt;

&lt;h3 id="solution"&gt;Solution&lt;/h3&gt;

&lt;p&gt;Assuming we had only 1 egg, then we cannot take any chances and the only way would be to start with Floor 1 and move up floor-by-floor. If the egg breaks on fall from floor &lt;code&gt;n&lt;/code&gt;, then floor &lt;code&gt;n-1&lt;/code&gt; is our answer. so, worst case 100 drops.&lt;/p&gt;

&lt;p&gt;Assuming we had infinite number of eggs, then we could use the binary tree stategy and start with floor 50, then floor 25 and that way we will be able to come to the solution in very few drops.&lt;/p&gt;

&lt;p&gt;In a 2 egg scenario, we could start with floor 50 and if the egg breaks, then we have no option but to go one floor at a time. so 1+49 chances.&lt;/p&gt;

&lt;p&gt;However, we could do better&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start at floor-10 and drop the egg
&lt;ul&gt;&lt;li&gt;if the egg does not break, go to floor-20&lt;/li&gt;
&lt;li&gt;if the egg breaks, go floor-by-floor from floor-1&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repeat this until we find the answer. Worst case being floor 99. 10 + 9=19 drops&lt;/p&gt;

&lt;p&gt;Could we do better?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;n + (n-1) + (n-2) + (n-3) + .... + 1 &amp;gt;= 100  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;n(n+1)/2 &amp;gt;= 100  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;n ~ 14&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;14        1       13  
27        2       12  
39        3       11  
50        4       10  
60        5       9  
69        6       8  
77        7       7  
84        8       6  
90        9       5  
95        10      4  
99        11      3  
100        12      0  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>setting custom alerts on any device using pushbullet</title><description>&lt;p&gt;&lt;a href="http://localhost:2368/setting-custom-alerts-on-any-device-using-pushbullet/www.pushbullet.com"&gt;pushbullet.com&lt;/a&gt; lets you send API based notification/alerts.&lt;/p&gt;

&lt;p&gt;Start with creating a Pushbullet account. Install the app on your phone. Go to the pushbullet website, head to "My Account" and then create an access token. Note this token.&lt;/p&gt;

&lt;p&gt;The below python code can then be used to send a&lt;/p&gt;</description><link>http://localhost:2368/setting-custom-alerts-on-any-device-using-pushbullet/</link><guid isPermaLink="false">c518a189-609e-4936-ab67-2a8a632a14fb</guid><dc:creator>vvb</dc:creator><pubDate>Tue, 15 Aug 2017 13:51:05 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href="http://localhost:2368/setting-custom-alerts-on-any-device-using-pushbullet/www.pushbullet.com"&gt;pushbullet.com&lt;/a&gt; lets you send API based notification/alerts.&lt;/p&gt;

&lt;p&gt;Start with creating a Pushbullet account. Install the app on your phone. Go to the pushbullet website, head to "My Account" and then create an access token. Note this token.&lt;/p&gt;

&lt;p&gt;The below python code can then be used to send a notification to all your registered devices.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def send_message(title, msg):  
    url = "https://api.pushbullet.com/v2/pushes"
    headers = {'Content-Type': 'application/json',
               "Access-Token": access_token}
    data = json.dumps({
        "type": "note",
        "title": title,
        "body": msg
    })
    requests.post(url, data=data, headers=headers)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My use case was &lt;a href="https://github.com/vvb/stock_alerts/blob/master/portfolio_alerts.py"&gt;this&lt;/a&gt; python script that generates buy and sell alerts on my mobile phone based on pre-configred prices in a csv sheet.&lt;/p&gt;

&lt;p&gt;But there is no reason this cannot be used to get datacenter alerts. I plan to include this as a library method in Cisco Ucs SDKs soon.&lt;/p&gt;

&lt;p&gt;note: You might need to signout and sign back in one time after you install the app for the alerts to start showing up.&lt;/p&gt;</content:encoded></item><item><title>Using http with pip</title><description>&lt;p&gt;Enforce using http with pip,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install --index-url=http://pypi.python.org/simple/ --trusted-host pypi.python.org &amp;lt;packageName&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/using-http-with-pip/</link><guid isPermaLink="false">7217758c-64c8-4fea-8c83-1fe62d32ec13</guid><category>ucspython</category><category>pip</category><dc:creator>vvb</dc:creator><pubDate>Mon, 17 Apr 2017 19:02:05 GMT</pubDate><content:encoded>&lt;p&gt;Enforce using http with pip,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install --index-url=http://pypi.python.org/simple/ --trusted-host pypi.python.org &amp;lt;packageName&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>Reflection in go!</title><description>&lt;p&gt;Printing struct attributes and values using reflection.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (  
    "fmt"
    "reflect"
)

type User struct {  
    FirstName string
    LastName  string
    Age       int
}

func (f *User) reflect() {  
    v := reflect.ValueOf(f).Elem()

    for i := 0; i &amp;lt; v.NumField(); i++ {
        val := v.Field(i)
        t := v.Type().Field(i)
        fmt.Printf("%s&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/reflection-in-go/</link><guid isPermaLink="false">81c31105-1037-4f65-99a5-967a31797cb9</guid><category>golang</category><dc:creator>vvb</dc:creator><pubDate>Mon, 17 Apr 2017 18:54:19 GMT</pubDate><content:encoded>&lt;p&gt;Printing struct attributes and values using reflection.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (  
    "fmt"
    "reflect"
)

type User struct {  
    FirstName string
    LastName  string
    Age       int
}

func (f *User) reflect() {  
    v := reflect.ValueOf(f).Elem()

    for i := 0; i &amp;lt; v.NumField(); i++ {
        val := v.Field(i)
        t := v.Type().Field(i)
        fmt.Printf("%s %v \t", t.Name, val.Interface())
    }
}

func main() {  
    f := &amp;amp;User{
        FirstName: "John",
        LastName:  "Doe",
        Age:       13,
    }

    f.reflect()
}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>ansible modules for Cisco UCS IMC server</title><description>&lt;h3 id="imcansible"&gt;imc-ansible&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;imc-ansible&lt;/code&gt; are a set of ansible modules for Cisco UCS standalone servers(IMC servers). &lt;/p&gt;

&lt;h4 id="installation"&gt;installation&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# Install ansible
sudo pip install ansible

# install imcsdk from github
git clone https://github.com/ciscoucs/imcsdk  
cd imcsdk  
sudo make install

# install imc-ansible from github
git clone https://github.com/ciscoucs/imc-ansible  
cd&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/ansible-modules-for-cisco-ucs-imc-server/</link><guid isPermaLink="false">53748709-f767-4c0b-b82b-d0e027b4f4be</guid><category>ansible</category><category>imcsdk</category><dc:creator>vvb</dc:creator><pubDate>Mon, 06 Feb 2017 22:55:04 GMT</pubDate><content:encoded>&lt;h3 id="imcansible"&gt;imc-ansible&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;imc-ansible&lt;/code&gt; are a set of ansible modules for Cisco UCS standalone servers(IMC servers). &lt;/p&gt;

&lt;h4 id="installation"&gt;installation&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# Install ansible
sudo pip install ansible

# install imcsdk from github
git clone https://github.com/ciscoucs/imcsdk  
cd imcsdk  
sudo make install

# install imc-ansible from github
git clone https://github.com/ciscoucs/imc-ansible  
cd imc-ansible  
sudo python install.py  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="samplerun"&gt;sample run&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;➔ ansible-playbook -i inventory site.yml

PLAY [imc]  
*********************************************************************

TASK [common : check if imcsdk is installed]  
***********************************
ok: [fpmr1_192.168.1.1]

TASK [common : install imcsdk]  
*************************************************
skipping: [fpmr1_192.168.1.1]

TASK [admin : set password policy]  
*********************************************
changed: [fpmr1_192.168.1.1]

TASK [admin : create local user]  
***********************************************
changed: [fpmr1_192.168.1.1]

TASK [admin : delete local user]  
***********************************************
changed: [fpmr1_192.168.1.1]

TASK [admin : reset password policy]  
*******************************************
changed: [fpmr1_192.168.1.1]

TASK [admin : enable ntp]  
******************************************************
changed: [fpmr1_192.168.1.1]

TASK [admin : disable ntp]  
*****************************************************
changed: [fpmr1_192.168.1.1]

TASK [admin : enable LDAP]  
*****************************************************
changed: [fpmr1_192.168.1.1]

TASK [admin : disable LDAP]  
****************************************************
changed: [fpmr1_192.168.1.1]

TASK [boot : set boot order]  
***************************************************
changed: [fpmr1_192.168.1.1]

TASK [boot : set boot order alternate]  
*****************************************
changed: [fpmr1_192.168.1.1]

TASK [storage : create virtual drive]  
******************************************
changed: [fpmr1_192.168.1.1]

TASK [storage : delete virtual drive]  
******************************************
changed: [fpmr1_192.168.1.1]

PLAY RECAP  
*********************************************************************
fpmr1_192.168.1.1       : ok=13   changed=12   unreachable=0    failed=0  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>Inventory Ucs Managed servers via ucsmsdk</title><description>&lt;p&gt;ucsmsdk 0.9.3.0 will add support for inventory APIs. &lt;br&gt;
This allows for multi-host multi-component inventory in multiple formats(enough of multiple? :-D ).&lt;/p&gt;

&lt;p&gt;The inventory APIs support inventorying,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- fabric interconnects
- cpus
- disks
- dimms
- storage controller
- VIC
- vNICs
- vHBAs
- PSUs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The&lt;/p&gt;</description><link>http://localhost:2368/inventory-ucs-managed-servers-via-ucsmsdk/</link><guid isPermaLink="false">017cc972-97b5-4343-a39e-9f777602a504</guid><category>ucspython</category><category>ucsmsdk</category><dc:creator>vvb</dc:creator><pubDate>Tue, 24 Jan 2017 06:04:13 GMT</pubDate><content:encoded>&lt;p&gt;ucsmsdk 0.9.3.0 will add support for inventory APIs. &lt;br&gt;
This allows for multi-host multi-component inventory in multiple formats(enough of multiple? :-D ).&lt;/p&gt;

&lt;p&gt;The inventory APIs support inventorying,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- fabric interconnects
- cpus
- disks
- dimms
- storage controller
- VIC
- vNICs
- vHBAs
- PSUs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The supported output formats for the report are,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- csv
- html
- json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;we recommend using the html format, as it has inbuilt javascript based filtering. It can quickly help narrow down a certain component on a certain host.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from ucsmsdk.utils.inventory import get_inventory

# Gets inventory of all components in JSON format
get_inventory(handle=handle)

# Gets inventory for all servers all components in JSON format
get_inventory(handle=[handle1, handle2, handle3])

# Gets inventory of one server all components in JSON format
get_inventory(handle=handle, component="all")

# Gets disks inventory of one server in JSON format
get_inventory(handle=handle, component="disks")

# Gets cpu and disks inventory for one server in JSON format
get_inventory(handle=handle, component=["cpu", "disks"])

# Gets cpu and disks inventory for one server in JSON format and writes to inventory.json file
get_inventory(handle=handle, component=["cpu", "disks"], file_format="json", file_name="inventory.json")

# Gets cpu and disks inventory for one server in CSV format and writes to inventory.csv fie
get_inventory(handle=handle, component=["cpu", "disks"], file_format="csv", file_name="inventory.csv")

# Gets cpu and disks inventory for one server in HTML format and writes to inventory.html
get_inventory(handle=handle, component=["cpu", "disks"], file_format="html", file_name="inventory.html")  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can be tried out today via the code available at &lt;a href="https://github.com/ciscoucs/ucsmsdk"&gt;https://github.com/ciscoucs/ucsmsdk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;complete code to run it,  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /usr/bin/env python

from ucsmsdk.ucshandle import UcsHandle  
from ucsmsdk.utils.inventory import get_inventory

handle = UcsHandle("192.168.1.1", "username", "password")  
handle.login()

# This would create inventory.html in the same directory where the script is run from
get_inventory(handle=handle, component="all", file_format="html", file_name="inventory.html")

handle.logout()  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>debugging in an ansible environment</title><description>&lt;p&gt;I was looking for a PDB sort of debugger for debugging custom ansible modules written in Python. This is when i bumped into &lt;a href="http://michaeldehaan.net/post/35403909347/tips-on-using-debuggers-with-ansible"&gt;this&lt;/a&gt; blog.&lt;/p&gt;

&lt;p&gt;As recommended on the blog, I tried out &lt;code&gt;epdb&lt;/code&gt; and it works great for debugging custom ansible modules written in python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install epdb&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/debugging-in-an-ansible-environment/</link><guid isPermaLink="false">265e74b7-1b71-4d1b-a51c-65520d6f6deb</guid><category>ansible</category><dc:creator>vvb</dc:creator><pubDate>Tue, 10 Jan 2017 20:18:27 GMT</pubDate><content:encoded>&lt;p&gt;I was looking for a PDB sort of debugger for debugging custom ansible modules written in Python. This is when i bumped into &lt;a href="http://michaeldehaan.net/post/35403909347/tips-on-using-debuggers-with-ansible"&gt;this&lt;/a&gt; blog.&lt;/p&gt;

&lt;p&gt;As recommended on the blog, I tried out &lt;code&gt;epdb&lt;/code&gt; and it works great for debugging custom ansible modules written in python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install epdb  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;epdb: &lt;a href="https://pypi.python.org/pypi/epdb"&gt;https://pypi.python.org/pypi/epdb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Insert the below code works as a breakpoint. Insert this at the lines needing debug.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import epdb  
epdb.serve()  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run ansible with &lt;code&gt;--forks 1&lt;/code&gt; option to avoid parallel threads&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ansible-playbook -i inventory site.yml --forks 1  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This run should hang when it hits the piece of code that has &lt;code&gt;epdb.serve()&lt;/code&gt;. At this point run the below from another shell&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python -c "import epdb; epdb.connect()"  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should get you to the &lt;code&gt;epdb&lt;/code&gt; shell. &lt;br&gt;
here on, things should look familiar to &lt;code&gt;pdb&lt;/code&gt;.&lt;/p&gt;</content:encoded></item><item><title>imcsdk storage APIs</title><description>&lt;p&gt;0.9.2.0 release of imcsdk will add support for &lt;code&gt;imcsdk.apis.server.storage&lt;/code&gt; to manage virtual drives.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;virtual_drive_create&lt;/code&gt; &lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virtual_drive_delete&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basic usage,  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vd = virtual_drive_create(handle=handle,  
                          drive_group=[[1]],
                          controller_slot="MEZZ",
                          raid_level=0)
virtual_drive_delete(handle=handle,  
                     controller_slot="MEZZ"&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/imcsdk-storage-apis/</link><guid isPermaLink="false">9031319e-31c8-44d7-a324-775ceda5c4a8</guid><category>imcsdk</category><category>ucspython</category><dc:creator>vvb</dc:creator><pubDate>Sat, 07 Jan 2017 19:04:54 GMT</pubDate><content:encoded>&lt;p&gt;0.9.2.0 release of imcsdk will add support for &lt;code&gt;imcsdk.apis.server.storage&lt;/code&gt; to manage virtual drives.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;virtual_drive_create&lt;/code&gt; &lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virtual_drive_delete&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basic usage,  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vd = virtual_drive_create(handle=handle,  
                          drive_group=[[1]],
                          controller_slot="MEZZ",
                          raid_level=0)
virtual_drive_delete(handle=handle,  
                     controller_slot="MEZZ",
                     name=vd.virtual_drive_name)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Somethings to note about the arguments that &lt;code&gt;virtual_drive_create&lt;/code&gt; takes,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;drive_group&lt;/code&gt; needs to be array of an array(s) - &lt;code&gt;[[]]&lt;/code&gt;
The below shows sample inputs for &lt;code&gt;drive_group&lt;/code&gt;,  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;        For Raid 0  - [[1, 2, 3]]
        For Raid 10 - [[1, 2], [3, 4], [5, 6]]
        For Raid 50 - [[1, 2, 3], [4, 5, 6]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where the numbers are physical drive slots.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;controller_slot&lt;/code&gt; is the name/id of the Storage controller. 
This could be &lt;code&gt;MEZZ&lt;/code&gt; in some cases. or could be a number &lt;code&gt;0-9&lt;/code&gt; is some.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;raid_level&lt;/code&gt; - refer to the raid levels supported by the platform&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title>Inventorying IMC servers via imcsdk</title><description>&lt;p&gt;The &lt;code&gt;0.9.2.0&lt;/code&gt; release of &lt;code&gt;imcsdk&lt;/code&gt; will add support for &lt;code&gt;inventory&lt;/code&gt; APIs. &lt;/p&gt;

&lt;p&gt;The following output formats are supported -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JSON (default)&lt;/li&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Refer the API documentation for a list of components that can be inventoried. &lt;code&gt;all&lt;/code&gt; fetches inventory for all components.&lt;/p&gt;

&lt;p&gt;Usage is shown below,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from imcsdk.&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/inventorying-imc-servers-via-imcsdk/</link><guid isPermaLink="false">8262e689-c3a1-49c9-b6ca-b0e1b703f4d1</guid><category>ucspython</category><category>imcsdk</category><dc:creator>vvb</dc:creator><pubDate>Tue, 03 Jan 2017 06:41:48 GMT</pubDate><content:encoded>&lt;p&gt;The &lt;code&gt;0.9.2.0&lt;/code&gt; release of &lt;code&gt;imcsdk&lt;/code&gt; will add support for &lt;code&gt;inventory&lt;/code&gt; APIs. &lt;/p&gt;

&lt;p&gt;The following output formats are supported -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JSON (default)&lt;/li&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Refer the API documentation for a list of components that can be inventoried. &lt;code&gt;all&lt;/code&gt; fetches inventory for all components.&lt;/p&gt;

&lt;p&gt;Usage is shown below,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from imcsdk.apis.server.inventory import get_inventory

# Gets inventory of all components in JSON format
get_inventory(handle=handle)

# Gets inventory for all servers all components in JSON format
get_inventory(handle=[handle1, handle2, handle3])

# Gets inventory of one server all components in JSON format
get_inventory(handle=handle, component="all")

# Gets disks inventory of one server in JSON format
get_inventory(handle=handle, component="disks")

# Gets cpu and disks inventory for one server in JSON format
get_inventory(handle=handle, component=["cpu", "disks"])

# Gets cpu and disks inventory for one server in JSON format and writes to inventory.json file
get_inventory(handle=handle, component=["cpu", "disks"], file_format="json", file_name="inventory.json")

# Gets cpu and disks inventory for one server in CSV format and writes to inventory.csv fie
get_inventory(handle=handle, component=["cpu", "disks"], file_format="csv", file_name="inventory.csv")

# Gets cpu and disks inventory for one server in HTML format and writes to inventory.html
get_inventory(handle=handle, component=["cpu", "disks"], file_format="html", file_name="inventory.html")  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>html table search with pure javascript</title><description>&lt;p&gt;The below javascript method searches through all the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; elements and hides &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; that do not have it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    function search() {
    // Declare variables
    var input, filter, table, tr, td, i, j, tds, ths, matched;
    input = document.getElementById("searchInput");
    filter = input.value.toUpperCase();
    tr = document.getElementsByTagName("tr");

    // Loop&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/html-table-search-with-pure-javascript/</link><guid isPermaLink="false">f4922a20-0954-4e6e-a0ca-493230cf8fc0</guid><category>javascript</category><dc:creator>vvb</dc:creator><pubDate>Thu, 22 Dec 2016 17:55:35 GMT</pubDate><content:encoded>&lt;p&gt;The below javascript method searches through all the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; elements and hides &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; that do not have it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    function search() {
    // Declare variables
    var input, filter, table, tr, td, i, j, tds, ths, matched;
    input = document.getElementById("searchInput");
    filter = input.value.toUpperCase();
    tr = document.getElementsByTagName("tr");

    // Loop through all table rows, and hide
    // those who don't match the search query
    for (i = 0; i &amp;lt; tr.length; i++) {
        tds = tr[i].getElementsByTagName("td");
        ths = tr[i].getElementsByTagName("th");
        matched = false;

        // leave the row header 
        if (ths.length &amp;gt; 0) {
            matched = true;
        }
        else {
            for (j = 0; j &amp;lt; tds.length; j++) {
                td = tds[j];
                if (td.innerHTML.toUpperCase().indexOf(filter) &amp;gt; -1) {
                    matched = true;
                    break;
                }

            }
        }
        if (matched == true) {
            tr[i].style.display = "";
        }
        else {
            tr[i].style.display = "none";
        }
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the below adds the search input box to the webpage and maps it to our &lt;code&gt;search&lt;/code&gt; method&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;input type="text" id="searchInput" onkeyup="search()" placeholder="Search.."&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>configuring a secure front-end for a non-secure service</title><description>&lt;p&gt;The goal is to enable &lt;code&gt;https&lt;/code&gt; only access for a pre-existing &lt;code&gt;http&lt;/code&gt; service.&lt;/p&gt;

&lt;p&gt;Let us assume that a service is running on &lt;code&gt;http://myserver.com:8000/service&lt;/code&gt;. The goal is to make no changes to the pre-existing service and still allow &lt;code&gt;https&lt;/code&gt; only access to it.&lt;/p&gt;

&lt;p&gt;One way this can&lt;/p&gt;</description><link>http://localhost:2368/configuring-a-secure-front-end-for-a-non-secure-service/</link><guid isPermaLink="false">90ab218f-6208-452b-91f6-be39f893d871</guid><category>apache</category><dc:creator>vvb</dc:creator><pubDate>Tue, 06 Dec 2016 12:24:01 GMT</pubDate><content:encoded>&lt;p&gt;The goal is to enable &lt;code&gt;https&lt;/code&gt; only access for a pre-existing &lt;code&gt;http&lt;/code&gt; service.&lt;/p&gt;

&lt;p&gt;Let us assume that a service is running on &lt;code&gt;http://myserver.com:8000/service&lt;/code&gt;. The goal is to make no changes to the pre-existing service and still allow &lt;code&gt;https&lt;/code&gt; only access to it.&lt;/p&gt;

&lt;p&gt;One way this can be accomplished, is using apache redirects. We are going to use &lt;code&gt;ProxyPass&lt;/code&gt; and &lt;code&gt;ProxyPassReverse&lt;/code&gt; directives.&lt;/p&gt;

&lt;p&gt;Add the following to &lt;code&gt;httpd.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost myserver.com:443&amp;gt;

# set the SSL options


# Enable ProxyPass
SSLProxyEngine On  
RewriteEngine On  
#ProxyPreserveHost On        #Important to comment this
ProxyPass /service http://myserver.com:8000/service/ nocanon  
ProxyPassReverse /service http://myserver.com:8000/service/

&amp;lt;/VirtualHost&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above would expose &lt;code&gt;https://myserver.com/service&lt;/code&gt; and internally redirect it to &lt;code&gt;http://myserver.com:8000/service&lt;/code&gt;. The &lt;code&gt;ProxyPass&lt;/code&gt; directive does that. &lt;code&gt;ProxyPassReverse&lt;/code&gt; makes sure that what is sent back to the browser is again converted back to &lt;code&gt;https://msyserver.com/service&lt;/code&gt; format.&lt;/p&gt;

&lt;p&gt;Now, &lt;code&gt;https&lt;/code&gt; access should be working. But we still need to disable the &lt;code&gt;http&lt;/code&gt; access. The below allows all access between internal services (&lt;code&gt;https&lt;/code&gt; to &lt;code&gt;http&lt;/code&gt; in this case), but disables access to port &lt;code&gt;8000&lt;/code&gt; from outside.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /sbin/iptables -A INPUT -p tcp -i lo -j ACCEPT  
sudo /sbin/iptables -A INPUT -p tcp --dport 8000 -j DROP  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done!&lt;/p&gt;</content:encoded></item><item><title>ansible - pretty printing errors</title><description>&lt;p&gt;Ansible does not do a great job at pretty printing exceptions/errors. There are plugins available that make this easy.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/ansible/plugins/callback  
cd ~/ansible/plugins/callback  
wget https://raw.githubusercontent.com/marcosdiez/ansible_human_log.py/master/human_log.py  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;create/edit &lt;code&gt;~/.ansible.cfg&lt;/code&gt; and add the&lt;/p&gt;</description><link>http://localhost:2368/ansible-pretty-printing-errors/</link><guid isPermaLink="false">fd95c5bb-4ed0-4c39-899b-6bb2c8cdaa30</guid><category>ansible</category><dc:creator>vvb</dc:creator><pubDate>Mon, 05 Dec 2016 04:25:34 GMT</pubDate><content:encoded>&lt;p&gt;Ansible does not do a great job at pretty printing exceptions/errors. There are plugins available that make this easy.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/ansible/plugins/callback  
cd ~/ansible/plugins/callback  
wget https://raw.githubusercontent.com/marcosdiez/ansible_human_log.py/master/human_log.py  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;create/edit &lt;code&gt;~/.ansible.cfg&lt;/code&gt; and add the following to the &lt;code&gt;defaults&lt;/code&gt; section,  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[defaults]
callback_plugins = ~/ansible_plugins/callback  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done!&lt;/p&gt;</content:encoded></item><item><title>Using Yum on RHEL without RHN subscription</title><description>&lt;p&gt;Disable the rhn yum plugin, &lt;code&gt;/etc/yum/pluginconf.d/rhnplugin.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[main]
enabled = 0  
gpgcheck = 1  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the epel-repo for the version of redhat you have,&lt;/p&gt;

&lt;p&gt;RHEL 5.x  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-5.noarch.rpm  
sudo rpm -Uvh epel-release-5*.rpm  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RHEL 6.x  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://dl.&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/using-yum-on-rhel-without-rhn-subscription/</link><guid isPermaLink="false">01d29217-e20d-4ec3-ae0c-0acf7d9f91db</guid><dc:creator>vvb</dc:creator><pubDate>Tue, 29 Nov 2016 05:13:00 GMT</pubDate><content:encoded>&lt;p&gt;Disable the rhn yum plugin, &lt;code&gt;/etc/yum/pluginconf.d/rhnplugin.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[main]
enabled = 0  
gpgcheck = 1  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the epel-repo for the version of redhat you have,&lt;/p&gt;

&lt;p&gt;RHEL 5.x  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-5.noarch.rpm  
sudo rpm -Uvh epel-release-5*.rpm  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RHEL 6.x  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm  
sudo rpm -Uvh epel-release-6*.rpm  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;RHEL 7.x  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm  
sudo rpm -Uvh epel-release-latest-7*.rpm  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, you can start using yum, with the install epel repos,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum update  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>Running multiple versions of python</title><description>&lt;p&gt;You can generally run multiple version of Python minor release 2.7 vs 2.6. These are symlinks created in /usr/bin/. &lt;/p&gt;

&lt;p&gt;But how do you go about running multiple versions of the the same minor release - 2.7.9 vs 2.7.10.&lt;/p&gt;

&lt;p&gt;I wrote a small script&lt;/p&gt;</description><link>http://localhost:2368/running-multiple-versions-of-python/</link><guid isPermaLink="false">56cfa77e-6fb8-4bcd-b05b-2754f21513b4</guid><category>ucspython</category><dc:creator>vvb</dc:creator><pubDate>Wed, 23 Nov 2016 17:45:55 GMT</pubDate><content:encoded>&lt;p&gt;You can generally run multiple version of Python minor release 2.7 vs 2.6. These are symlinks created in /usr/bin/. &lt;/p&gt;

&lt;p&gt;But how do you go about running multiple versions of the the same minor release - 2.7.9 vs 2.7.10.&lt;/p&gt;

&lt;p&gt;I wrote a small script that downloads, builds python from source and installs it in a path of its own. &lt;/p&gt;

&lt;p&gt;The below is to be run with the required version, for e.g.&lt;code&gt;2.7.9&lt;/code&gt;. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
version=$1  
mkdir ~/python  
wget http://www.python.org/ftp/python/$version/Python-$version.tgz  
tar -zxvf Python-$version.tgz  
cd Python-$version  
mkdir ~/.localpython-$version  
./configure --prefix=$HOME/.localpython-$version
make  
make install  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It can then be used from ~/.localpython-2.7.9/bin/python.&lt;/p&gt;

&lt;p&gt;we can now set up a virtual environment specifically for each version of python we have installed.&lt;/p&gt;

&lt;p&gt;Install virtualenv&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install virtualenv  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the following to &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt;,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source /usr/local/bin/virtualenvwrapper.sh  
export WORKON_HOME="$HOME/virtual_env/"  
export PIP_VIRTUALENV_BASE=$WORKON_HOME  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can create a new environment using the below command. The &lt;code&gt;-p&lt;/code&gt; option specifies the python version to use for this environment. &lt;code&gt;--no-site-packages&lt;/code&gt; will restrict this environment from using the python libraries from the global environment.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkvirtualenv --no-site-packages -p ~/.localpython-2.7.9/bin/python python279  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here on, we call switch to this new environment using the below,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;workon python279  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Can get out this environment by using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deactivate  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item></channel></rss>